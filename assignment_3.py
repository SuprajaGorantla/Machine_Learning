# -*- coding: utf-8 -*-
"""Assignment_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gxQ6fOfnSubUPc2P8ZvJt1Y7PACgvMxL
"""

import numpy as np
# create a 2D array with random values
arr = np.random.randint(1, 16, size=(3, 5))
print("Original array:")
print(arr)

# find the index of the maximum value in each row
max_indices = np.argmax(arr, axis=1)

# replace the max with 0
for i, j in enumerate(max_indices):
    arr[i, j] = 0

print("Modified array:")
print(arr)

import numpy as np

arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]], dtype=np.int32)

print("Array shape:", arr.shape)
print("Array type:", type(arr))
print("Array data type:", arr.dtype)
print("Array:\n", arr)

import numpy as np

A = np.array([[3, -2],
              [1, 0]])

eigenvals, eigenvecs = np.linalg.eig(A)

print("Eigenvalues:\n", eigenvals)
print("Right eigenvectors:\n", eigenvecs)

# given array
arr = [[0, 1, 2], [3, 4, 5]]

# calculate the sum of the diagonal elements
diagonal_sum = 0
for i in range(min(len(arr), len(arr[0]))):
    diagonal_sum += arr[i][i]

# print the result
print("The sum of the diagonal elements is:", diagonal_sum)

import numpy as np

arr = np.array([[1,2], [3,4], [5,6]])
print("Original array")
print(arr)
print("==============================")
# Reshape to 2x3

new_arr = arr.reshape(2,3)
print(new_arr)

#reshape to 3by 2
newl_arr = arr.reshape(3,2)
print(newl_arr)

import numpy as np
from matplotlib import pyplot as plt
def func(pct, allvalues):
    absolute = int(pct / 100.*np.sum(allvalues))
    return "{:.1f}%".format(pct, absolute)
#chart values
Popularity = [ 22.2, 17.6, 8.8, 8, 7.7, 6.7]
Programming_languages = ['Java', 'Python', 'PHP', 'JavaScript', 'C#', 'C++']
explode = [0.1, 0, 0, 0, 0, 0]
fig, ax = plt.subplots(figsize =(7, 5))
wedges, texts, autotexts = ax.pie(Popularity,
                                  autopct = lambda pct: func(pct, Popularity),
                                  explode = explode,
                                  labels = Programming_languages,
                                  shadow = True,
                                  startangle = 90,
                                  wedgeprops = {'edgecolor': 'black'},
                                  textprops = dict(color ="Black")) 
plt.setp(autotexts, size = 8, weight ="bold")
plt.title('popularity of programming Languages')
plt.tight_layout()
plt.show()